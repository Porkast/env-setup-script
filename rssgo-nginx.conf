user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##
	server {
		listen 80;
		server_name reader.rssgo.net;
		rewrite  ^/(.*)$ https://reader.rssgo.net/$1 permanent; 
		root /home/workspace/guoshao/build;
		index index.html index.htm;
		location / {
			try_files $uri $uri/ /index.html;
		}

		location /v1 {
			proxy_pass                 http://127.0.0.1:8081;
			proxy_redirect             off;
			proxy_set_header           Host             $host;
			proxy_set_header           X-Real-IP        $remote_addr;
			proxy_set_header           X-Forwarded-For  $proxy_add_x_forwarded_for;
			add_header Access-Control-Allow-Origin * always;
			add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
			add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
		}
	}	

	server {
		listen 443 ssl;

		server_name reader.rssgo.net;
		root /home/workspace/guoshao/build;
		index index.html index.htm;
		location / {
			try_files $uri $uri/ /index.html;
		}

		location /v1 {
			proxy_pass                 http://127.0.0.1:8081;
			proxy_redirect             off;
			proxy_set_header           Host             $host;
			proxy_set_header           X-Real-IP        $remote_addr;
			proxy_set_header           X-Forwarded-For  $proxy_add_x_forwarded_for;
			add_header Access-Control-Allow-Origin * always;
			add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
			add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
		}




		ssl_certificate /home/workspace/cert/cert-reader.pem;
		ssl_certificate_key /home/workspace/cert/cert-reader.key;
		ssl_session_timeout 5m;
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;

		ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #表示使用的TLS协议的类型。
		ssl_prefer_server_ciphers on;

	}

	server {
		listen 80;
		server_name www.rssgo.net;
		rewrite  ^/(.*)$ https://www.rssgo.net/$1 permanent;

		location / {
			proxy_pass                 http://127.0.0.1:8083;
			proxy_redirect             off;
			proxy_set_header           Host             $host;
			proxy_set_header           X-Real-IP        $remote_addr;
			proxy_set_header           X-Forwarded-For  $proxy_add_x_forwarded_for;
		}
	}

	server {
		listen 443 ssl;

		server_name www.rssgo.net;
		index index.html index.htm;
		ssl_certificate /home/workspace/cert/cert.pem;
		ssl_certificate_key /home/workspace/cert/cert.key;
		ssl_session_timeout 5m;
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;

		ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #表示使用的TLS协议的类型。
		ssl_prefer_server_ciphers on;

		#root /home/workspace/guoshao-web-pwa/build;
		location / {
			proxy_pass                 http://127.0.0.1:8083;
			proxy_redirect             off;
			proxy_set_header           Host             $host;
			proxy_set_header           X-Real-IP        $remote_addr;
			proxy_set_header           X-Forwarded-For  $proxy_add_x_forwarded_for;
		}

	}


	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}
